version: 2
root-markers:
  - .git/
# command define
tools:
  gitcommit-gitlint: &gitcommit-gitlint
    lint-command: 'gitlint'
    lint-stdin: true
    lint-formats:
      - '%l: %m: "%r"'
      - '%l: %m'
  selene: &selene
    lint-command: 'selene --quiet --display-style json'
    lint-stdin: false
    lintFormats:
      - '%f:%l:%c: %trror%m'
      - '%f:%l:%c: %tarning%m'
      - '%f:%l:%c: %tote%m'
  yaml-yamllint: &yaml-yamllint
    lint-command: 'yamllint -f parsable -'
    lint-stdin: true
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c:%m'
  chktex: &chktex
    lint-command: 'chktex -v0 -q'
    lint-stdin: true
    lint-ignore-exit-code: false
    lint-severity: 2
    lint-formats:
      - '%f:%l:%c:%n:%m'
  python-black: &python-black
    format-command: 'black --no-color --quiet -'
    format-stdin: true
  blackd: &blackd
    format-command: 'blackd-client'
    format-stdin: true
  yaml-fmt: &yaml-fmt
    format-command: 'yamlfmt -in'
    format-stdin: true
  beautysh: &beautysh
    format-command: 'beautysh -'
  markdown-markdownlint: &markdown-markdownlint
    lint-command: 'markdownlint -s -c ~/.config/.markdownlint.yaml'
    lint-stdin: true
    lint-formats:
      - '%f:%l %m'
      - '%f:%l:%c %m'
      - '%f: %l: %m'
  markdown-pandoc: &markdown-pandoc
    format-command: 'pandoc -f markdown -t gfm -sp --tab-stop=2'
    format-stdin: true
  vale-lint: &vale-lint
    prefix: vale
    lint-command: 'vale --ext --relative --output line ${INPUT}'
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-formats:
      - '%f:%l:%c:%*[^:]:%m'
languages:
  python:
    - !!merge <<: *python-black
  lua:
    - !!merge <<: *selene
  tex:
    - !!merge <<: *chktex
  gitcommit:
    - !!merge <<: *gitcommit-gitlint
    - !!merge <<: *vale-lint
  yaml:
    - !!merge <<: *yaml-yamllint
    - !!merge <<: *yaml-fmt
  zsh:
    - !!merge <<: *beautysh
  markdown:
    - !!merge <<: *markdown-markdownlint
    - !!merge <<: *markdown-pandoc
